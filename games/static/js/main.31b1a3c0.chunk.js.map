{"version":3,"sources":["games/nim/NimMenu.tsx","games/notakto/NotaktoMenu.tsx","games/chessboard/ChessboardMenu.tsx","games/kayles/KaylesMenu.tsx","games/brg-nim/BRGNimMenu.tsx","Home.tsx","util/Random.js","util/Range.js","games/nim/NimRules.js","games/nim/NimBoard.js","games/nim/NimClient.tsx","games/notakto/NotaktoBoard.js","games/notakto/NotaktoClient.tsx","games/notakto/NotaktoRules.js","games/chessboard/ChessboardRules.js","games/chessboard/ChessboardBoard.js","games/chessboard/ChessboardClient.tsx","resources/bowling-pin.svg","resources/triangle.svg","games/kayles/KaylesBoard.js","games/kayles/KaylesClient.tsx","games/kayles/KaylesRules.js","games/brg-nim/BRGNimRules.js","games/brg-nim/BRGNimBoard.js","games/brg-nim/BRGNimClient.tsx","App.tsx","reportWebVitals.ts","index.tsx","games/nim/NimBoard.module.css","games/brg-nim/BRGNimBoard.module.css","games/chessboard/ChessboardBoard.module.css","games/notakto/NotaktoBoard.module.css","games/kayles/KaylesBoard.module.css"],"names":["NimMenu","props","state","firstPlayer","randomPiles","startingPiles","e","this","setState","target","value","s","split","map","parseInt","numPiles","maxPileSize","onChange","handleFirstPlayerChange","type","readOnly","checked","onClick","handleRandomPilesClick","defaultValue","handleStartingPilesChange","disabled","min","handleNumPilesChange","handleMaxPileSizeChange","to","pathname","queryString","stringify","arrayFormat","React","Component","NotaktoMenu","ChessboardMenu","piece","handlePieceChange","numPins","handleNumPinsChange","BRGNimMenu","colors","options","filter","option","selected","multiple","handleColorsChange","Home","className","KaylesMenu","getRandomInt","max","Math","ceil","floor","random","randomElement","arr","length","range","a","b","step","Number","isNaN","randomInitialPiles","piles","push","RULES","styles","Token","active","onMouseEnter","id","onMouseLeave","Pile","onMouseEnterToken","key","highlightedToken","onMouseLeaveToken","undefined","onClickToken","takeChips","renderedTokens","i","numTokens","pileCount","NimBoard","toggleRules","showRules","players","G","renderedPiles","j","moves","status","playerID","ctx","currentPlayer","gameover","winner","menu","NimClient","bots","MCTSBot","Local","humanFirst","initialPiles","ClientInstance","Client","game","getHumanFirst","name","setup","setupData","turn","moveLimit","order","TurnOrder","CUSTOM","pile","numChips","INVALID_MOVE","endIf","every","n","isVictory","ai","enumerate","entries","move","args","board","multiplayer","createMultiplayer","debug","NotaktoBoard","clickCell","tbody","cells","getStatus","NotaktoClient","Array","fill","row","symbols","some","enumerateRookMoves","pos","ChessboardRules","movePiece","isValidRookMove","isValidQueenMove","isValidKnightMove","Error","isValidMove","enumerateQueenMoves","enumerateKnightMoves","ChessboardBoard","onMouseEnterSquare","highlightedSquare","onMouseLeaveSquare","onClickSquare","white","String","fromCharCode","getChessPiece","rows","squareContents","ChessboardClient","_g","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBowlingPin","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","xmlSpace","ref","d","_polygon","ForwardRef","SvgTriangle","points","KaylesBoard","console","log","knockOnePin","knockTwoPins","pins","onClickPin","fillOpacity","onClickTriangle","KaylesClient","p","enumerateMoves","color","toColorString","takeChip","l","tokens","BRGNimBoard","BRGNimClient","slice","numMoves","App","path","render","match","nimProps","params","opts","parseNumbers","parseBooleans","notaktoProps","chessboardProps","kaylesProps","brgNimProps","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.31b1a3c0.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    firstPlayer: string,\r\n    randomPiles: boolean,\r\n    startingPiles?: number[],\r\n    numPiles?: number,\r\n    maxPileSize?: number\r\n}\r\n\r\nfunction parseListOfInt(s: String) {\r\n    return s.split(',').map(s => parseInt(s));\r\n}\r\n\r\nclass NimMenu extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstPlayer: 'human',\r\n            randomPiles: false,\r\n            startingPiles: [1,2,3]\r\n        };\r\n    }\r\n\r\n    handleFirstPlayerChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState({firstPlayer: e.target.value})\r\n    }\r\n\r\n    handleRandomPilesClick() {\r\n        this.setState({randomPiles: !this.state.randomPiles});\r\n    }\r\n\r\n    handleStartingPilesChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({startingPiles: parseListOfInt(e.target.value)});\r\n    }\r\n\r\n    handleNumPilesChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({numPiles: parseInt(e.target.value)});\r\n    }\r\n\r\n    handleMaxPileSizeChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({maxPileSize: parseInt(e.target.value)});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Nim:</h3>\r\n                <ul>\r\n                    <li>First player: <select onChange={(e) => this.handleFirstPlayerChange(e)}>\r\n                        <option value={\"human\"}>You</option>\r\n                        <option value={\"bot\"}>Bot</option>\r\n                        <option value={\"random\"}>Random</option>\r\n                    </select></li>\r\n                    <li>Random piles:\r\n                        <input type={\"checkbox\"} readOnly checked={this.state.randomPiles}\r\n                               onClick={() => this.handleRandomPilesClick()}/>\r\n                    </li>\r\n                    <li>Starting piles: <input type={\"text\"} defaultValue={\"1,2,3\"} onChange={(e) => this.handleStartingPilesChange(e)} disabled={this.state.randomPiles} /></li>\r\n                    <li>Number of piles: <input type={\"number\"} min={\"0\"} onChange={(e) => this.handleNumPilesChange(e)} disabled={!this.state.randomPiles}/></li>\r\n                    <li>Max pile size: <input type={\"number\"} min={\"0\"} onChange={(e) => this.handleMaxPileSizeChange(e)} disabled={!this.state.randomPiles}/></li>\r\n                </ul>\r\n                <Link to={{pathname: \"/nim/\" + queryString.stringify(this.state, {arrayFormat: 'comma'})}}><button>Play</button></Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NimMenu;","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    firstPlayer: string\r\n}\r\n\r\nclass NotaktoMenu extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstPlayer: 'human'\r\n        };\r\n    }\r\n\r\n    handleFirstPlayerChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState({firstPlayer: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Notakto:</h3>\r\n                <ul>\r\n                    <li>First player: <select onChange={(e) => this.handleFirstPlayerChange(e)}>\r\n                        <option value={\"human\"}>You</option>\r\n                        <option value={\"bot\"}>Bot</option>\r\n                        <option value={\"random\"}>Random</option>\r\n                    </select></li>\r\n                </ul>\r\n                <Link to={{pathname: \"/notakto/\" + queryString.stringify(this.state)}}><button>Play</button></Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotaktoMenu;","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    firstPlayer: string,\r\n    piece: string\r\n}\r\n\r\nclass ChessboardMenu extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstPlayer: 'human',\r\n            piece: 'rook'\r\n        };\r\n    }\r\n\r\n    handleFirstPlayerChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState({firstPlayer: e.target.value})\r\n    }\r\n\r\n    handlePieceChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState({piece: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Chessboard:</h3>\r\n                <ul>\r\n                    <li>First player: <select onChange={(e) => this.handleFirstPlayerChange(e)}>\r\n                        <option value={\"human\"}>You</option>\r\n                        <option value={\"bot\"}>Bot</option>\r\n                        <option value={\"random\"}>Random</option>\r\n                    </select></li>\r\n                    <li>Piece: <select onChange={(e) => this.handlePieceChange(e)}>\r\n                        <option value={\"rook\"}>Rook</option>\r\n                        <option value={\"queen\"}>Queen</option>\r\n                        <option value={\"knight\"}>Knight</option>\r\n                    </select></li>\r\n                </ul>\r\n                <Link to={{pathname: \"/chessboard/\" + queryString.stringify(this.state)}}><button>Play</button></Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChessboardMenu;","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    firstPlayer: string,\r\n    numPins: number\r\n}\r\n\r\nclass ChessboardMenu extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstPlayer: 'human',\r\n            numPins: 13\r\n        };\r\n    }\r\n\r\n    handleFirstPlayerChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState({firstPlayer: e.target.value})\r\n    }\r\n\r\n    handleNumPinsChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({numPins: parseInt(e.target.value)})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Kayles:</h3>\r\n                <ul>\r\n                    <li>First player: <select onChange={(e) => this.handleFirstPlayerChange(e)}>\r\n                        <option value={\"human\"}>You</option>\r\n                        <option value={\"bot\"}>Bot</option>\r\n                        <option value={\"random\"}>Random</option>\r\n                    </select></li>\r\n                    <li>Number of pins: <input type={\"number\"} defaultValue={13} onChange={(e) => this.handleNumPinsChange(e)}/></li>\r\n                </ul>\r\n                <Link to={{pathname: \"/kayles/\" + queryString.stringify(this.state)}}><button>Play</button></Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChessboardMenu;","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    firstPlayer: string,\r\n    randomPiles: boolean,\r\n    startingPiles?: string[],\r\n    colors?: string[],\r\n    numPiles?: number,\r\n    maxPileSize?: number\r\n}\r\n\r\nclass BRGNimMenu extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstPlayer: 'human',\r\n            randomPiles: false,\r\n            startingPiles: ['br','br','r']\r\n        };\r\n    }\r\n\r\n    handleFirstPlayerChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState({firstPlayer: e.target.value})\r\n    }\r\n\r\n    handleRandomPilesClick() {\r\n        this.setState({randomPiles: !this.state.randomPiles});\r\n    }\r\n\r\n    handleStartingPilesChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({startingPiles: e.target.value.split(',')});\r\n    }\r\n\r\n    handleColorsChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState({colors: [...e.target.options].filter(option => option.selected).map(option => option.value)});\r\n    }\r\n\r\n    handleNumPilesChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({numPiles: parseInt(e.target.value)});\r\n    }\r\n\r\n    handleMaxPileSizeChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({maxPileSize: parseInt(e.target.value)});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Blue-Red-Green Nim:</h3>\r\n                <ul>\r\n                    <li>First player: <select onChange={(e) => this.handleFirstPlayerChange(e)}>\r\n                        <option value={\"human\"}>You</option>\r\n                        <option value={\"bot\"}>Bot</option>\r\n                        <option value={\"random\"}>Random</option>\r\n                    </select></li>\r\n                    <li>Random piles:\r\n                        <input type={\"checkbox\"} readOnly checked={this.state.randomPiles}\r\n                               onClick={() => this.handleRandomPilesClick()}/>\r\n                    </li>\r\n                    <li>Starting piles: <input type={\"text\"} defaultValue={\"br,br,r\"} onChange={(e) => this.handleStartingPilesChange(e)} disabled={this.state.randomPiles} /></li>\r\n                    <li>Colors: <select multiple onChange={(e) => this.handleColorsChange(e)} disabled={!this.state.randomPiles}>\r\n                        <option value={\"b\"}>Blue</option>\r\n                        <option value={\"r\"}>Red</option>\r\n                        <option value={\"g\"}>Green</option>\r\n                    </select></li>\r\n                    <li>Number of piles: <input type={\"number\"} min={\"0\"} onChange={(e) => this.handleNumPilesChange(e)} disabled={!this.state.randomPiles}/></li>\r\n                    <li>Max pile size: <input type={\"number\"} min={\"0\"} onChange={(e) => this.handleMaxPileSizeChange(e)} disabled={!this.state.randomPiles}/></li>\r\n                </ul>\r\n                <Link to={{pathname: \"/brg-nim/\" + queryString.stringify(this.state, {arrayFormat: 'comma'})}}><button>Play</button></Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BRGNimMenu;","import React from \"react\";\r\nimport NimMenu from \"./games/nim/NimMenu\";\r\nimport NotaktoMenu from \"./games/notakto/NotaktoMenu\";\r\nimport ChessboardMenu from \"./games/chessboard/ChessboardMenu\";\r\nimport KaylesMenu from \"./games/kayles/KaylesMenu\";\r\nimport BRGNimMenu from \"./games/brg-nim/BRGNimMenu\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <h1>Combinatorial Games</h1>\r\n            <div className={\"rectangle-container\"}>\r\n                <div className={\"rectangle\"}>\r\n                    <NimMenu />\r\n                </div>\r\n                <div className={\"rectangle\"}>\r\n                    <NotaktoMenu />\r\n                </div>\r\n                <div className={\"rectangle\"}>\r\n                    <ChessboardMenu />\r\n                </div>\r\n                <div className={\"rectangle\"}>\r\n                    <KaylesMenu />\r\n                </div>\r\n                <div className={\"rectangle\"}>\r\n                    <BRGNimMenu />\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nexport function randomElement(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}","export function* range(a, b, step) {\r\n    switch (arguments.length) {\r\n        case 1:\r\n            b = Number(a);\r\n            a = 0;\r\n            step = 1;\r\n            break;\r\n        case 2:\r\n            a = Number(a);\r\n            b = Number(b);\r\n            step = a < b ? +1 : -1;\r\n            break;\r\n        case 3:\r\n            a = Number(a);\r\n            b = Number(b);\r\n            step = Number(step);\r\n            break;\r\n        default:\r\n            return;\r\n    }\r\n\r\n    if (Number.isNaN(a) || Number.isNaN(b) || Number.isNaN(step))\r\n        return;\r\n\r\n    if (a === b || !step)\r\n        return;\r\n\r\n    if (a < b) {\r\n        if (step < 0)\r\n            return;\r\n        while (a < b) {\r\n            yield a;\r\n            a += step;\r\n        }\r\n    }\r\n\r\n    if (a > b) {\r\n        if (step > 0)\r\n            return;\r\n        while (a > b) {\r\n            yield a;\r\n            a += step;\r\n        }\r\n    }\r\n}","import {INVALID_MOVE, TurnOrder} from 'boardgame.io/core';\r\nimport {getRandomInt} from \"../../util/Random\";\r\nimport {range} from \"../../util/Range\";\r\n\r\nconst DEFAULT_NUM_PILES = 5;\r\nconst DEFAULT_MAX_PILE_SIZE = 8;\r\n\r\nfunction isVictory(G) {\r\n    return G.piles.every((n) => n === 0);\r\n}\r\n\r\nfunction randomInitialPiles(numPiles = DEFAULT_NUM_PILES, maxPileSize = DEFAULT_MAX_PILE_SIZE) {\r\n    let piles = []\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (const _ of range(numPiles)) {\r\n        piles.push(getRandomInt(1,maxPileSize + 1))\r\n    }\r\n    return piles;\r\n}\r\n\r\nexport function NimRules(humanFirst, initialPiles, numPiles, maxPileSize) {\r\n    return {\r\n        name: 'Nim',\r\n\r\n        setup: (ctx, setupData) => ({ piles: initialPiles || randomInitialPiles(numPiles, maxPileSize) }),\r\n\r\n        turn: {\r\n            moveLimit: 1,\r\n            order: TurnOrder.CUSTOM(humanFirst ? ['0','1'] : ['1','0'])\r\n        },\r\n\r\n        moves: {\r\n            takeChips: (G, ctx, pile, numChips) => {\r\n                if (numChips > G.piles[pile]) {\r\n                    return INVALID_MOVE;\r\n                } else if (numChips < 1) {\r\n                    return INVALID_MOVE;\r\n                }\r\n                G.piles[pile] -= numChips;\r\n            },\r\n        },\r\n\r\n        endIf: (G, ctx) => {\r\n            if (isVictory(G)) {\r\n                return { winner: ctx.currentPlayer };\r\n            }\r\n        },\r\n\r\n        ai: {\r\n            enumerate: (G, ctx) => {\r\n                let moves = [];\r\n                for (const [i, numChips] of G.piles.entries()) {\r\n                    for (const j of range(numChips)) {\r\n                        moves.push({move: 'takeChips', args: [i,j+1]});\r\n                    }\r\n                }\r\n                return moves;\r\n            }\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport styles from './NimBoard.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RULES = <div className={styles['rectangle']}>\r\n    Players take turns removing chips from piles. <br/>\r\n    A player may take any number of chips from a single pile. <br/>\r\n    The player who takes the last chip wins.\r\n</div>\r\n\r\nclass Token\r\n    extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                className={this.props.active ? styles['highlighted-token'] : styles['token']}\r\n                onMouseEnter={() => this.props.onMouseEnter(this.props.id)}\r\n                onMouseLeave={this.props.onMouseLeave}\r\n                onClick={() => this.props.onClick(this.props.id)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nclass Pile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { highlightedToken: undefined };\r\n    }\r\n\r\n    onMouseEnterToken = (key) => {\r\n        this.setState({highlightedToken: key});\r\n    };\r\n\r\n    onMouseLeaveToken = () => {\r\n        this.setState({highlightedToken: undefined});\r\n    };\r\n\r\n    onClickToken = (key) => {\r\n        this.setState({highlightedToken: undefined});\r\n        this.props.takeChips(key+1);\r\n    };\r\n\r\n    render() {\r\n        let renderedTokens = [];\r\n        for (let i = 0; i < this.props.numTokens; i++) {\r\n            renderedTokens.push(\r\n                <Token key={i}\r\n                       id={i}\r\n                       active={(this.state.highlightedToken === undefined) ? false : i <= this.state.highlightedToken}\r\n                       onMouseEnter={this.onMouseEnterToken}\r\n                       onMouseLeave={this.onMouseLeaveToken}\r\n                       onClick={this.onClickToken}/>\r\n            );\r\n        }\r\n\r\n        let pileCount = <div className={styles['pile-count']}>{this.props.numTokens}</div>;\r\n\r\n        return <div className={styles['pile']}>\r\n            {renderedTokens}\r\n            {pileCount}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class NimBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { players: undefined, showRules: false };\r\n    }\r\n\r\n    toggleRules = () => {\r\n        this.setState({showRules: !this.state.showRules});\r\n    }\r\n\r\n    render() {\r\n        let piles = this.props.G.piles;\r\n\r\n        let renderedPiles = [];\r\n        for (let i = 0; i < piles.length; i++) {\r\n            renderedPiles.push(\r\n                <Pile key={i} numTokens={piles[i]} takeChips={(j) => this.props.moves.takeChips(i,j)}/>\r\n            );\r\n        }\r\n\r\n        let status = undefined;\r\n        const playerID = parseInt(this.props.ctx.currentPlayer);\r\n        if (this.props.ctx.gameover) {\r\n            const winner = parseInt(this.props.ctx.gameover.winner);\r\n            status = <div className={styles['status']}>\r\n                {((winner === 0) ? 'You' : 'The bot') + ' won!'}\r\n            </div>;\r\n        } else {\r\n            status = <div className={styles['status']}>\r\n                {'It is ' + ((playerID === 0) ? 'your' : \"the bot's\") + \" turn.\"}\r\n            </div>;\r\n        }\r\n\r\n        let menu = <div className={styles['menu']}>\r\n            <Link id={\"back\"} to={'/'}>Back</Link>\r\n            <button id={styles['rulesButton']} onClick={() => this.toggleRules()}>Rules</button>\r\n            <Link id={\"restart\"} to={'#'}>Restart</Link>\r\n        </div>;\r\n\r\n        return (\r\n            <div className={styles['board-wrapper']}>\r\n                {status}\r\n                <div className={styles['board']}>\r\n                    {renderedPiles}\r\n                </div>\r\n                {menu}\r\n                {this.state.showRules ? RULES : ''}\r\n            </div>\r\n        );\r\n    }\r\n}","import { Client } from 'boardgame.io/react';\r\nimport { Local } from \"boardgame.io/multiplayer\";\r\nimport { MCTSBot } from \"boardgame.io/ai\";\r\nimport * as React from \"react\";\r\nimport { NimRules } from './NimRules';\r\nimport { NimBoard } from './NimBoard';\r\nimport {randomElement} from \"../../util/Random\";\r\n\r\nexport interface NimProps {\r\n    firstPlayer: string\r\n    randomPiles: boolean,\r\n    startingPiles?: number[],\r\n    numPiles?: number,\r\n    maxPileSize?: number\r\n}\r\n\r\nclass NimClient extends React.Component<NimProps> {\r\n    createMultiplayer() {\r\n        let bots = { '1': MCTSBot };\r\n        return Local({ bots });\r\n    }\r\n\r\n    getHumanFirst() {\r\n        switch(this.props.firstPlayer) {\r\n            case 'human':\r\n                return true;\r\n            case 'bot':\r\n                return false;\r\n            case 'random':\r\n                return randomElement([false,true]);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ClientInstance = Client({\r\n            game: NimRules(this.getHumanFirst(), this.props.randomPiles ? undefined : this.props.startingPiles,\r\n                this.props.numPiles, this.props.maxPileSize),\r\n            board: NimBoard,\r\n            multiplayer: this.createMultiplayer(),\r\n            debug: false\r\n        });\r\n        return <ClientInstance playerID={\"0\"}/>;\r\n    }\r\n}\r\n\r\nexport default NimClient;","import React from 'react';\r\nimport styles from './NotaktoBoard.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RULES = <div className={styles['rectangle']}>\r\n    Players take turns placing X's in squares on the board. <br/>\r\n    The first player to make 3-in-a-row (horizontally, vertically, or diagonally) wins.\r\n</div>\r\n\r\nexport class NotaktoBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { players: undefined, showRules: false };\r\n    }\r\n\r\n    toggleRules = () => {\r\n        this.setState({showRules: !this.state.showRules});\r\n    }\r\n\r\n    getStatus() {\r\n        const playerID = parseInt(this.props.ctx.currentPlayer);\r\n        if (this.props.ctx.gameover) {\r\n            const winner = parseInt(this.props.ctx.gameover.winner);\r\n            return <div className={styles['status']}>\r\n                {((winner === 0) ? 'You' : 'The bot') + ' won!'}\r\n            </div>;\r\n        } else {\r\n            return <div className={styles['status']}>\r\n                {'It is ' + ((playerID === 0) ? 'your' : \"the bot's\") + \" turn.\"}\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    onClick(id) {\r\n        this.props.moves.clickCell(id);\r\n    }\r\n\r\n    render() {\r\n        let tbody = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            let cells = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                const id = 3 * i + j;\r\n                cells.push(\r\n                    <td className={styles['cell']} key={id} onClick={() => this.onClick(id)}>\r\n                        {this.props.G.cells[id]}\r\n                    </td>\r\n                );\r\n            }\r\n            tbody.push(<tr key={i}>{cells}</tr>);\r\n        }\r\n\r\n        let menu = <div className={styles['menu']}>\r\n            <Link id={\"back\"} to={'/'}>Back</Link>\r\n            <button id={styles['rulesButton']} onClick={() => this.toggleRules()}>Rules</button>\r\n            <Link id={\"restart\"} to={'#'}>Restart</Link>\r\n        </div>;\r\n\r\n        return (\r\n            <div className={styles['board-wrapper']}>\r\n                {this.getStatus()}\r\n                <table className={styles['board']}>\r\n                    <tbody>{tbody}</tbody>\r\n                </table>\r\n                {menu}\r\n                {this.state.showRules ? RULES : ''}\r\n            </div>\r\n        );\r\n    }\r\n}","import { Client } from 'boardgame.io/react';\r\nimport { Local } from \"boardgame.io/multiplayer\";\r\nimport { MCTSBot } from \"boardgame.io/ai\";\r\nimport * as React from \"react\";\r\nimport {NotaktoBoard} from \"./NotaktoBoard\";\r\nimport {NotaktoRules} from \"./NotaktoRules\";\r\nimport {randomElement} from \"../../util/Random\";\r\n\r\nlet bots = { '1': MCTSBot };\r\nlet multiplayer = Local({ bots });\r\n\r\nexport interface NotaktoProps {\r\n    firstPlayer: string\r\n}\r\n\r\nclass NotaktoClient extends React.Component<NotaktoProps> {\r\n    getHumanFirst() {\r\n        switch(this.props.firstPlayer) {\r\n            case 'human':\r\n                return true;\r\n            case 'bot':\r\n                return false;\r\n            case 'random':\r\n                return randomElement([false,true]);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let ClientInstance = Client({\r\n            game: NotaktoRules(this.getHumanFirst()),\r\n            board: NotaktoBoard,\r\n            multiplayer: multiplayer,\r\n            debug: false\r\n        });\r\n        return <ClientInstance playerID={\"0\"}/>;\r\n    }\r\n}\r\n\r\nexport default NotaktoClient;","import {INVALID_MOVE, TurnOrder} from 'boardgame.io/core';\r\n\r\nfunction isVictory(G) {\r\n    const positions = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6],\r\n        [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]\r\n    ];\r\n\r\n    const isRowComplete = row => {\r\n        const symbols = row.map(i => G.cells[i]);\r\n        return symbols.every(i => i !== null && i === symbols[0]);\r\n    };\r\n\r\n    return positions.map(isRowComplete).some(i => i === true);\r\n}\r\n\r\nexport function NotaktoRules(humanFirst) {\r\n    return {\r\n        name: 'Notakto',\r\n\r\n        setup: () => ({cells: Array(9).fill(null)}),\r\n\r\n        turn: {\r\n            moveLimit: 1,\r\n            order: TurnOrder.CUSTOM(humanFirst ? ['0','1'] : ['1','0'])\r\n        },\r\n\r\n        moves: {\r\n            clickCell: (G, ctx, id) => {\r\n                if (G.cells[id] === null) {\r\n                    G.cells[id] = 'X';\r\n                } else {\r\n                    return INVALID_MOVE;\r\n                }\r\n            },\r\n        },\r\n\r\n        endIf: (G, ctx) => {\r\n            if (isVictory(G)) {\r\n                return {winner: ctx.currentPlayer};\r\n            }\r\n        },\r\n\r\n        ai: {\r\n            enumerate: (G, ctx) => {\r\n                let moves = [];\r\n                for (let i = 0; i < 9; i++) {\r\n                    if (G.cells[i] === null) {\r\n                        moves.push({move: 'clickCell', args: [i]});\r\n                    }\r\n                }\r\n                return moves;\r\n            },\r\n        }\r\n    };\r\n}\r\n","import {INVALID_MOVE, TurnOrder} from 'boardgame.io/core';\r\nimport {getRandomInt} from \"../../util/Random\";\r\nimport {range} from \"../../util/Range\";\r\n\r\nfunction isVictory(G) {\r\n    if (G.piece === 'knight') {\r\n        return (G.pos[0] <= 1) && (G.pos[1] <= 1);\r\n    } else {\r\n        return (G.pos[0] === 0) && (G.pos[1] === 0);\r\n    }\r\n}\r\n\r\nfunction randomInitialPos() {\r\n    return [getRandomInt(2,8), getRandomInt(2,8)];\r\n}\r\n\r\nfunction isValidMove(G, ctx, pos) {\r\n    if (pos[0] < 0 || pos[1] < 0) {\r\n        return false;\r\n    }\r\n    switch (G.piece) {\r\n        case 'rook':\r\n            return isValidRookMove(G, pos);\r\n        case 'queen':\r\n            return isValidQueenMove(G, pos);\r\n        case 'knight':\r\n            return isValidKnightMove(G, pos);\r\n        default:\r\n            throw Error('invalid piece');\r\n    }\r\n}\r\n\r\nfunction isValidRookMove(G, pos) {\r\n    return ((pos[0] < G.pos[0]) && (pos[1] === G.pos[1])) ||\r\n        ((pos[0] === G.pos[0]) && (pos[1] < G.pos[1]));\r\n}\r\n\r\nfunction isValidQueenMove(G, pos) {\r\n    return ((pos[0] < G.pos[0]) && (pos[1] === G.pos[1])) ||\r\n        ((pos[0] === G.pos[0]) && (pos[1] < G.pos[1])) ||\r\n        ((pos[0] < G.pos[0]) && (pos[1] < G.pos[1]) &&\r\n            (G.pos[0]-pos[0] === G.pos[1]-pos[1]));\r\n}\r\n\r\nfunction isValidKnightMove(G, pos) {\r\n    return (G.pos[0]-1 === pos[0] && G.pos[1]-2 === pos[1]) ||\r\n        (G.pos[0]-2 === pos[0] && G.pos[1]-1 === pos[1]) ||\r\n        (G.pos[0]+1 === pos[0] && G.pos[1]-2 === pos[1]) ||\r\n        (G.pos[0]-2 === pos[0] && G.pos[1]+1 === pos[1]);\r\n}\r\n\r\nfunction enumerateRookMoves(G) {\r\n    let moves = [];\r\n    for (const i of range(G.pos[0])) {\r\n        moves.push({move: 'movePiece', args: [[i, G.pos[1]]]});\r\n    }\r\n    for (const i of range(G.pos[1])) {\r\n        moves.push({move: 'movePiece', args: [[G.pos[0], i]]});\r\n    }\r\n    return moves;\r\n}\r\n\r\nfunction enumerateQueenMoves(G) {\r\n    let moves = enumerateRookMoves(G);\r\n    for (const i of range(1, Math.min(G.pos[0],G.pos[1]))) {\r\n        moves.push({move: 'movePiece', args: [[G.pos[0]-i, G.pos[1]-i]]});\r\n    }\r\n    return moves;\r\n}\r\n\r\nfunction enumerateKnightMoves(G) {\r\n    let moves = [];\r\n    if (G.pos[0]-1 >= 0 && G.pos[1]-2 >= 0) {\r\n        moves.push({move: 'movePiece', args: [[G.pos[0]-1, G.pos[1]-2]]});\r\n    }\r\n    if (G.pos[0]-2 >= 0 && G.pos[1]-1 >= 0) {\r\n        moves.push({move: 'movePiece', args: [[G.pos[0]-2, G.pos[1]-1]]});\r\n    }\r\n    if (G.pos[0]+1 >= 0 && G.pos[1]-2 >= 0) {\r\n        moves.push({move: 'movePiece', args: [[G.pos[0]+1, G.pos[1]-2]]});\r\n    }\r\n    if (G.pos[0]-2 >= 0 && G.pos[1]+1 >= 0) {\r\n        moves.push({move: 'movePiece', args: [[G.pos[0]-2, G.pos[1]+1]]});\r\n    }\r\n    return moves;\r\n}\r\n\r\nexport function ChessboardRules(humanFirst, piece) {\r\n    return {\r\n        name: 'Chessboard',\r\n\r\n        setup: (ctx, setupData) => ({pos: randomInitialPos(), piece: piece}),\r\n\r\n        turn: {\r\n            moveLimit: 1,\r\n            order: TurnOrder.CUSTOM(humanFirst ? ['0','1'] : ['1','0'])\r\n        },\r\n\r\n        moves: {\r\n            movePiece: (G, ctx, pos) => {\r\n                if (isValidMove(G, ctx, pos)) {\r\n                    G.pos = pos;\r\n                } else {\r\n                    return INVALID_MOVE;\r\n                }\r\n            }\r\n        },\r\n\r\n        endIf: (G, ctx) => {\r\n            if (isVictory(G)) {\r\n                return {winner: ctx.currentPlayer};\r\n            }\r\n        },\r\n\r\n        ai: {\r\n            enumerate: (G, ctx) => {\r\n                switch (G.piece) {\r\n                    case 'rook':\r\n                        return enumerateRookMoves(G);\r\n                    case 'queen':\r\n                        return enumerateQueenMoves(G);\r\n                    case 'knight':\r\n                        return enumerateKnightMoves(G);\r\n                    default:\r\n                        throw Error('invalid piece');\r\n                }\r\n            }\r\n        }\r\n    };\r\n}","import React from \"react\";\r\nimport {range} from \"../../util/Range\";\r\nimport styles from './ChessboardBoard.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RULES = <div className={styles['rectangle']}>\r\n    Players take turns moving the chess piece closer to the star. <br/>\r\n    The player who moves the chess piece onto the starred square wins.\r\n</div>\r\n\r\nexport class ChessboardBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { highlightedSquare: undefined, players: undefined, showRules: false };\r\n    }\r\n\r\n    getStatus() {\r\n        const playerID = parseInt(this.props.ctx.currentPlayer);\r\n        if (this.props.ctx.gameover) {\r\n            const winner = parseInt(this.props.ctx.gameover.winner);\r\n            return <div className={styles['status']}>\r\n                {((winner === 0) ? 'You' : 'The bot') + ' won!'}\r\n            </div>;\r\n        } else {\r\n            return <div className={styles['status']}>\r\n                {'It is ' + ((playerID === 0) ? 'your' : \"the bot's\") + \" turn.\"}\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    onMouseEnterSquare = (key) => {\r\n        this.setState({highlightedSquare: key});\r\n    };\r\n\r\n    onMouseLeaveSquare = () => {\r\n        this.setState({highlightedSquare: undefined});\r\n    };\r\n\r\n    onClickSquare = (key) => {\r\n        this.setState({highlightedSquare: undefined});\r\n        this.props.moves.movePiece(key);\r\n    };\r\n\r\n    toggleRules = () => {\r\n        this.setState({showRules: !this.state.showRules});\r\n    }\r\n\r\n    getChessPiece(white) {\r\n        if (white) {\r\n            switch (this.props.G.piece) {\r\n                case 'rook':\r\n                    return String.fromCharCode(9814);\r\n                case 'queen':\r\n                    return String.fromCharCode(9813);\r\n                case 'knight':\r\n                    return String.fromCharCode(9816);\r\n                default:\r\n                    throw Error('invalid piece');\r\n            }\r\n        } else {\r\n            switch (this.props.G.piece) {\r\n                case 'rook':\r\n                    return String.fromCharCode(9820);\r\n                case 'queen':\r\n                    return String.fromCharCode(9819);\r\n                case 'knight':\r\n                    return String.fromCharCode(9822);\r\n                default:\r\n                    throw Error('invalid piece');\r\n            }\r\n        }\r\n    }\r\n\r\n    squareContents(G, i, j) {\r\n        if ((this.props.G.pos[0] === i) && (this.props.G.pos[1] === j)) {\r\n            return this.getChessPiece(false);\r\n        }\r\n        if ((this.state.highlightedSquare !== undefined)\r\n            && (this.state.highlightedSquare[0] === i)\r\n            && (this.state.highlightedSquare[1] === j)) {\r\n            return this.getChessPiece(true);\r\n        }\r\n        if (G.piece === 'knight') {\r\n            if (i <= 1 && j <= 1) {\r\n                return String.fromCharCode(9733);\r\n            }\r\n        } else {\r\n            if (i === 0 && j === 0) {\r\n                return String.fromCharCode(9733);\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        let rows = [];\r\n        for (const i of range(8)) {\r\n            let row = [];\r\n            for (const j of range(8)) {\r\n                row.push(\r\n                    <td><div\r\n                        id={[i,j]}\r\n                        key={[i,j]}\r\n                        className={((i+j) % 2 === 0) ? styles['light-square'] : styles['dark-square']}\r\n                        onClick={() => this.onClickSquare([i,j])}\r\n                        onMouseEnter={() => this.onMouseEnterSquare([i,j])}\r\n                        onMouseLeave={() => this.onMouseLeaveSquare()}>\r\n                        {this.squareContents(this.props.G, i, j)}\r\n                    </div></td>\r\n                );\r\n            }\r\n            rows.push(\r\n                <tr>{row}</tr>\r\n            );\r\n        }\r\n\r\n        let menu = <div className={styles['menu']}>\r\n            <Link to={'/'}>Back</Link>\r\n            <button id={styles['rulesButton']} onClick={() => this.toggleRules()}>Rules</button>\r\n            <Link to={'#'}>Restart</Link>\r\n        </div>;\r\n\r\n        return (\r\n            <div className={styles['board-wrapper']}>\r\n                {this.getStatus()}\r\n                <table className={styles['board']}>\r\n                    <tbody>{rows}</tbody>\r\n                </table>\r\n                {menu}\r\n                {this.state.showRules ? RULES : ''}\r\n            </div>\r\n        );\r\n    }\r\n}","import { Client } from 'boardgame.io/react';\r\nimport { Local } from \"boardgame.io/multiplayer\";\r\nimport { MCTSBot } from \"boardgame.io/ai\";\r\nimport * as React from \"react\";\r\nimport { ChessboardRules } from './ChessboardRules';\r\nimport { ChessboardBoard } from './ChessboardBoard';\r\nimport {randomElement} from \"../../util/Random\";\r\n\r\nexport interface ChessboardProps {\r\n    firstPlayer: string,\r\n    piece: string\r\n}\r\n\r\nclass ChessboardClient extends React.Component<ChessboardProps> {\r\n    createMultiplayer() {\r\n        let bots = { '1': MCTSBot };\r\n        return Local({ bots });\r\n    }\r\n\r\n    getHumanFirst() {\r\n        switch(this.props.firstPlayer) {\r\n            case 'human':\r\n                return true;\r\n            case 'bot':\r\n                return false;\r\n            case 'random':\r\n                return randomElement([false,true]);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ClientInstance = Client({\r\n            game: ChessboardRules(this.getHumanFirst(), this.props.piece),\r\n            board: ChessboardBoard,\r\n            multiplayer: this.createMultiplayer(),\r\n            debug: false\r\n        });\r\n        return <ClientInstance playerID={\"0\"}/>;\r\n    }\r\n}\r\n\r\nexport default ChessboardClient;","var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBowlingPin(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"250 0 500 1000\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M571.7,357.5H430c0,0-94.1,176.6-94.1,328.2c0,80.5,34.2,214.1,34.6,214.1c24.5,97.7,42,90.1,134.9,90.1c85.6,0,110,7.7,129.3-90c-0.4,0.4,29.4-132.2,29.4-214.1C664.1,520.6,571.7,357.5,571.7,357.5L571.7,357.5z M565.9,246.5c0,0,22.7-75.2,22.7-121.4C588.6,79,565.1,10,502.4,10c-62.8,0-91.7,68.3-91.7,114.5c0,46.2,24.8,122,24.8,122H565.9z M560.3,318.9v-38.6H439.7v38.6L560.3,318.9L560.3,318.9z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBowlingPin);\nexport default __webpack_public_path__ + \"static/media/bowling-pin.e843c298.svg\";\nexport { ForwardRef as ReactComponent };","var _polygon;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTriangle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 -500 500 1000\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"250,60 100,400 400,400\",\n    className: \"triangle\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTriangle);\nexport default __webpack_public_path__ + \"static/media/triangle.46e44638.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport styles from './KaylesBoard.module.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {range} from \"../../util/Range\";\r\nimport { ReactComponent as Pin } from '../../resources/bowling-pin.svg';\r\nimport { ReactComponent as Triangle } from '../../resources/triangle.svg';\r\n\r\nconst RULES = <div className={styles['rectangle']}>\r\n    Players take turns bowling a ball at a row of pins. <br/>\r\n    A player can either hit one pin, or two adjacent pins. <br/>\r\n    The player who bowls down the last pin wins.\r\n</div>\r\n\r\nexport class KaylesBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { showRules: false };\r\n    }\r\n\r\n    getStatus() {\r\n        const playerID = parseInt(this.props.ctx.currentPlayer);\r\n        if (this.props.ctx.gameover) {\r\n            const winner = parseInt(this.props.ctx.gameover.winner);\r\n            return <div className={styles['status']}>\r\n                {((winner === 0) ? 'You' : 'The bot') + ' won!'}\r\n            </div>;\r\n        } else {\r\n            return <div className={styles['status']}>\r\n                {'It is ' + ((playerID === 0) ? 'your' : \"the bot's\") + \" turn.\"}\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    onClickPin(i) {\r\n        console.log(this.props);\r\n        this.props.moves.knockOnePin(i);\r\n    }\r\n\r\n    onClickTriangle(i) {\r\n        this.props.moves.knockTwoPins(i);\r\n    }\r\n\r\n    toggleRules = () => {\r\n        this.setState({showRules: !this.state.showRules});\r\n    }\r\n\r\n    render() {\r\n        let pins = []\r\n        for (const i of range(this.props.G.pins.length-1)) {\r\n            pins.push(this.props.G.pins[i]\r\n                ? <Pin fill={\"black\"} key={\"pin\"+i} onClick={() => this.onClickPin(i)}/>\r\n                : <Pin key={\"pin\"+i} fillOpacity={0}/>);\r\n            pins.push(this.props.G.pins[i] && this.props.G.pins[i+1]\r\n                ? <Triangle fill={\"black\"} key={\"tri\"+i} onClick={() => this.onClickTriangle(i)}/>\r\n                : <Triangle key={\"tri\"+i} fillOpacity={0}/>);\r\n        }\r\n        const i = this.props.G.pins.length-1;\r\n        pins.push(this.props.G.pins[i]\r\n            ? <Pin fill={\"black\"} key={\"pin\"+i} onClick={() => this.onClickPin(i)}/>\r\n            : <Pin key={\"pin\"+i} fillOpacity={0}/>);\r\n\r\n        let menu = <div className={styles['menu']}>\r\n            <Link to={'/'}>Back</Link>\r\n            <button id={styles['rulesButton']} onClick={() => this.toggleRules()}>Rules</button>\r\n            <Link to={'#'}>Restart</Link>\r\n        </div>;\r\n\r\n        return (\r\n            <div className={styles['board-wrapper']}>\r\n                {this.getStatus()}\r\n                <div className={styles['board']}>\r\n                    {pins}\r\n                </div>\r\n                {menu}\r\n                {this.state.showRules ? RULES : ''}\r\n            </div>\r\n        );\r\n    }\r\n}","import { Client } from 'boardgame.io/react';\r\nimport { Local } from \"boardgame.io/multiplayer\";\r\nimport { MCTSBot } from \"boardgame.io/ai\";\r\nimport * as React from \"react\";\r\nimport { KaylesRules } from './KaylesRules';\r\nimport { KaylesBoard } from './KaylesBoard';\r\nimport {randomElement} from \"../../util/Random\";\r\n\r\nexport interface KaylesProps {\r\n    firstPlayer: string,\r\n    numPins: number\r\n}\r\n\r\nclass KaylesClient extends React.Component<KaylesProps> {\r\n    createMultiplayer() {\r\n        let bots = { '1': MCTSBot };\r\n        return Local({ bots });\r\n    }\r\n\r\n    getHumanFirst() {\r\n        switch(this.props.firstPlayer) {\r\n            case 'human':\r\n                return true;\r\n            case 'bot':\r\n                return false;\r\n            case 'random':\r\n                return randomElement([false,true]);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ClientInstance = Client({\r\n            game: KaylesRules(this.getHumanFirst(), this.props.numPins),\r\n            board: KaylesBoard,\r\n            multiplayer: this.createMultiplayer(),\r\n            debug: false\r\n        });\r\n        return <ClientInstance playerID={\"0\"}/>;\r\n    }\r\n}\r\n\r\nexport default KaylesClient;","import {INVALID_MOVE, TurnOrder} from 'boardgame.io/core';\r\nimport {range} from \"../../util/Range\";\r\n\r\nfunction isVictory(G) {\r\n    return !G.pins.some((p) => p);\r\n}\r\n\r\nexport function KaylesRules(humanFirst, numPins) {\r\n    return {\r\n        name: 'Kayles',\r\n\r\n        setup: () => ({pins: Array(numPins).fill(true)}),\r\n\r\n        turn: {\r\n            moveLimit: 1,\r\n            order: TurnOrder.CUSTOM(humanFirst ? ['0','1'] : ['1','0'])\r\n        },\r\n\r\n        moves: {\r\n            knockOnePin: (G, ctx, i) => {\r\n                if (G.pins[i]) {\r\n                    G.pins[i] = false;\r\n                } else {\r\n                    return INVALID_MOVE;\r\n                }\r\n            },\r\n            knockTwoPins: (G, ctx, i) => {\r\n                if (G.pins[i] && G.pins[i+1]) {\r\n                    G.pins[i] = false;\r\n                    G.pins[i+1] = false;\r\n                } else {\r\n                    return INVALID_MOVE;\r\n                }\r\n            }\r\n        },\r\n\r\n        endIf: (G, ctx) => {\r\n            if (isVictory(G)) {\r\n                return {winner: ctx.currentPlayer};\r\n            }\r\n        },\r\n\r\n        ai: {\r\n            enumerate: (G, ctx) => {\r\n                let moves = [];\r\n                for (const i of range(G.pins.length)) {\r\n                    if (G.pins[i]) {\r\n                        moves.push({move: 'knockOnePin', args: [i]})\r\n                    }\r\n                    if (G.pins[i] && G.pins[i+1]) {\r\n                        moves.push({move: 'knockTwoPins', args: [i]})\r\n                    }\r\n                }\r\n                return moves;\r\n            },\r\n        }\r\n    };\r\n}\r\n","import {INVALID_MOVE, TurnOrder} from 'boardgame.io/core';\r\nimport {getRandomInt, randomElement} from \"../../util/Random\";\r\nimport {range} from \"../../util/Range\";\r\n\r\nconst DEFAULT_NUM_PILES = 5;\r\nconst DEFAULT_MAX_PILE_SIZE = 8;\r\n\r\nfunction randomInitialPiles(colors = ['b', 'r', 'g'], numPiles = DEFAULT_NUM_PILES, maxPileSize = DEFAULT_MAX_PILE_SIZE) {\r\n    let piles = []\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (const _ of range(numPiles)) {\r\n        let pile = []\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (const _ of range(getRandomInt(1,maxPileSize+1))) {\r\n            pile.push(randomElement(colors));\r\n        }\r\n        piles.push(pile);\r\n    }\r\n    return piles;\r\n}\r\n\r\nfunction enumerateMoves(G, ctx) {\r\n    let moves = [];\r\n    for (const [i, pile] of G.piles.entries()) {\r\n        for (const j of range(pile.length)) {\r\n            if ((ctx.currentPlayer === '1' && G.piles[i][j] !== 'b')\r\n                || (ctx.currentPlayer === '0' && G.piles[i][j] !== 'r')) {\r\n                moves.push({move: 'takeChip', args: [i,j]});\r\n            }\r\n        }\r\n    }\r\n    return moves;\r\n}\r\n\r\nexport function BRGNimRules(humanFirst, initialPiles, colors, numPiles, maxPileSize) {\r\n    return {\r\n        name: 'Nim',\r\n\r\n        setup: (ctx, setupData) => ({ piles: initialPiles || randomInitialPiles(colors, numPiles, maxPileSize) }),\r\n\r\n        turn: {\r\n            moveLimit: 1,\r\n            order: TurnOrder.CUSTOM(humanFirst ? ['0','1'] : ['1','0'])\r\n        },\r\n\r\n        moves: {\r\n            takeChip: (G, ctx, i, j) => {\r\n                if ((j < 0) || (j >= G.piles[i].length)) {\r\n                    return INVALID_MOVE;\r\n                }\r\n                let color = G.piles[i][j];\r\n                if ((color === 'b') && (ctx.currentPlayer === '1')) {\r\n                    return INVALID_MOVE;\r\n                }\r\n                if ((color === 'r') && (ctx.currentPlayer === '0')) {\r\n                    return INVALID_MOVE;\r\n                }\r\n                G.piles[i] = G.piles[i].slice(0, j);\r\n            },\r\n        },\r\n\r\n        endIf: (G, ctx) => {\r\n            if (ctx.numMoves === 0 && enumerateMoves(G, ctx).length === 0) {\r\n                return { winner: ctx.currentPlayer === '0' ? '1' : '0' };\r\n            }\r\n        },\r\n\r\n        ai: {\r\n            enumerate: enumerateMoves\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport styles from './BRGNimBoard.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RULES = <div className={styles['rectangle']}>\r\n    Players take turns removing chips from piles. <br/>\r\n    A player may only take a chip of their color, and all chips above it. <br/>\r\n    You are blue, and the bot is red. <br/>\r\n    Green chips may be taken by any player. <br/>\r\n    The player who takes the last chip wins.\r\n</div>\r\n\r\nclass Token\r\n    extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                className={`${styles['token']} ${styles[this.props.color]}`}\r\n                onClick={() => this.props.onClick(this.props.id)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction toColorString(s) {\r\n    switch (s) {\r\n        case 'b':\r\n            return 'blue';\r\n        case 'r':\r\n            return 'red';\r\n        case 'g':\r\n            return 'green';\r\n        default:\r\n            throw Error('invalid color');\r\n    }\r\n}\r\n\r\nclass Pile extends React.Component {\r\n    onClickToken = (key) => {\r\n        this.props.takeChip(key);\r\n    };\r\n\r\n    render() {\r\n        let renderedTokens = [];\r\n        let l = this.props.tokens.length;\r\n        for (let i = 0; i < l; i++) {\r\n            renderedTokens.push(\r\n                <Token key={l-1-i}\r\n                       id={l-1-i}\r\n                       color={toColorString(this.props.tokens[l-1-i])}\r\n                       onClick={this.onClickToken}/>\r\n            );\r\n        }\r\n\r\n        let pileCount = <div className={styles['pile-count']}>{this.props.numTokens}</div>;\r\n\r\n        return <div className={styles['pile']}>\r\n            {renderedTokens}\r\n            {pileCount}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class BRGNimBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { players: undefined, showRules: false };\r\n    }\r\n\r\n    toggleRules = () => {\r\n        this.setState({showRules: !this.state.showRules});\r\n    }\r\n\r\n    render() {\r\n        let piles = this.props.G.piles;\r\n\r\n        let renderedPiles = [];\r\n        for (let i = 0; i < piles.length; i++) {\r\n            renderedPiles.push(\r\n                <Pile key={i} tokens={piles[i]} takeChip={(j) => this.props.moves.takeChip(i,j)}/>\r\n            );\r\n        }\r\n\r\n        let status = undefined;\r\n        const playerID = parseInt(this.props.ctx.currentPlayer);\r\n        if (this.props.ctx.gameover) {\r\n            const winner = parseInt(this.props.ctx.gameover.winner);\r\n            status = <div className={styles['status']}>\r\n                {((winner === 0) ? 'You' : 'The bot') + ' won!'}\r\n            </div>;\r\n        } else {\r\n            status = <div className={styles['status']}>\r\n                {'It is ' + ((playerID === 0) ? 'your' : \"the bot's\") + \" turn.\"}\r\n            </div>;\r\n        }\r\n\r\n        let menu = <div className={styles['menu']}>\r\n            <Link id={\"back\"} to={'/'}>Back</Link>\r\n            <button id={styles['rulesButton']} onClick={() => this.toggleRules()}>Rules</button>\r\n            <Link id={\"restart\"} to={'#'}>Restart</Link>\r\n        </div>;\r\n\r\n        return (\r\n            <div className={styles['board-wrapper']}>\r\n                {status}\r\n                <div className={styles['board']}>\r\n                    {renderedPiles}\r\n                </div>\r\n                {menu}\r\n                {this.state.showRules ? RULES : ''}\r\n            </div>\r\n        );\r\n    }\r\n}","import { Client } from 'boardgame.io/react';\r\nimport { Local } from \"boardgame.io/multiplayer\";\r\nimport { MCTSBot } from \"boardgame.io/ai\";\r\nimport * as React from \"react\";\r\nimport { BRGNimRules } from './BRGNimRules';\r\nimport { BRGNimBoard } from './BRGNimBoard';\r\nimport {randomElement} from \"../../util/Random\";\r\n\r\nexport interface BRGNimProps {\r\n    firstPlayer: string\r\n    randomPiles: boolean,\r\n    startingPiles?: string[],\r\n    colors?: string[],\r\n    numPiles?: number,\r\n    maxPileSize?: number\r\n}\r\n\r\nclass BRGNimClient extends React.Component<BRGNimProps> {\r\n    createMultiplayer() {\r\n        let bots = { '1': MCTSBot };\r\n        return Local({ bots });\r\n    }\r\n\r\n    getHumanFirst() {\r\n        switch(this.props.firstPlayer) {\r\n            case 'human':\r\n                return true;\r\n            case 'bot':\r\n                return false;\r\n            case 'random':\r\n                return randomElement([false,true]);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ClientInstance = Client({\r\n            game: BRGNimRules(this.getHumanFirst(), this.props.randomPiles ? undefined : this.props.startingPiles,\r\n                this.props.colors, this.props.numPiles, this.props.maxPileSize),\r\n            board: BRGNimBoard,\r\n            multiplayer: this.createMultiplayer(),\r\n            debug: false\r\n        });\r\n        return <ClientInstance playerID={\"0\"}/>;\r\n    }\r\n}\r\n\r\nexport default BRGNimClient;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport NimClient from './games/nim/NimClient';\nimport { NimProps } from './games/nim/NimClient';\nimport * as queryString from \"query-string\";\nimport NotaktoClient, {NotaktoProps} from \"./games/notakto/NotaktoClient\";\nimport ChessboardClient, {ChessboardProps} from \"./games/chessboard/ChessboardClient\";\nimport KaylesClient, {KaylesProps} from \"./games/kayles/KaylesClient\";\nimport BRGNimClient, {BRGNimProps} from \"./games/brg-nim/BRGNimClient\";\n\nclass App extends React.PureComponent {\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route\n                        path={\"/nim/:opts\"}\n                        render={({ match }) => {\n                            const nimProps = queryString.parse(match.params.opts, {arrayFormat: 'comma', parseNumbers: true, parseBooleans: true}) as unknown as NimProps;\n                            return <NimClient {...  nimProps}/>;\n                        }}\n                    />\n                    <Route\n                        path={\"/notakto/:opts\"}\n                        render={({ match }) => {\n                            const notaktoProps = queryString.parse(match.params.opts) as unknown as NotaktoProps;\n                            return <NotaktoClient {... notaktoProps}/>;\n                        }}\n                    />\n                    <Route\n                        path={\"/chessboard/:opts\"}\n                        render={({ match }) => {\n                            const chessboardProps = queryString.parse(match.params.opts) as unknown as ChessboardProps;\n                            return <ChessboardClient {... chessboardProps}/>;\n                        }}\n                    />\n                    <Route\n                        path={\"/kayles/:opts\"}\n                        render={({ match }) => {\n                            const kaylesProps = queryString.parse(match.params.opts, {parseNumbers: true}) as unknown as KaylesProps;\n                            return <KaylesClient {... kaylesProps}/>;\n                        }}\n                    />\n                    <Route\n                        path={\"/brg-nim/:opts\"}\n                        render={({ match }) => {\n                            const brgNimProps = queryString.parse(match.params.opts, {arrayFormat: 'comma', parseNumbers: true, parseBooleans: true}) as unknown as BRGNimProps;\n                            return <BRGNimClient {... brgNimProps}/>;\n                        }}\n                    />\n                    <Route\n                        path={\"/\"}\n                        render={() => <Home />}\n                    />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board-wrapper\":\"NimBoard_board-wrapper__2DlrF\",\"status\":\"NimBoard_status__1nalZ\",\"board\":\"NimBoard_board__7hRWb\",\"pile\":\"NimBoard_pile__3KKWv\",\"pile-count\":\"NimBoard_pile-count__1Q9BK\",\"token\":\"NimBoard_token__1ogap\",\"highlighted-token\":\"NimBoard_highlighted-token__3miPd\",\"menu\":\"NimBoard_menu__MtF9i\",\"rulesButton\":\"NimBoard_rulesButton__2D73U\",\"rectangle\":\"NimBoard_rectangle__3nAk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board-wrapper\":\"BRGNimBoard_board-wrapper__1UFDk\",\"status\":\"BRGNimBoard_status__1qYTv\",\"board\":\"BRGNimBoard_board__ojkza\",\"pile\":\"BRGNimBoard_pile__GSHNm\",\"pile-count\":\"BRGNimBoard_pile-count__2muzS\",\"token\":\"BRGNimBoard_token__2r4tS\",\"blue\":\"BRGNimBoard_blue__37Vig\",\"red\":\"BRGNimBoard_red__1xBP_\",\"green\":\"BRGNimBoard_green__1dzh_\",\"menu\":\"BRGNimBoard_menu__IxoR4\",\"rulesButton\":\"BRGNimBoard_rulesButton__1raHe\",\"rectangle\":\"BRGNimBoard_rectangle__3Niuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board-wrapper\":\"ChessboardBoard_board-wrapper__1J95C\",\"status\":\"ChessboardBoard_status__27bSa\",\"board\":\"ChessboardBoard_board__33ggt\",\"light-square\":\"ChessboardBoard_light-square__2PltZ\",\"dark-square\":\"ChessboardBoard_dark-square__37IYf\",\"menu\":\"ChessboardBoard_menu__1EOqu\",\"rulesButton\":\"ChessboardBoard_rulesButton__1CDyq\",\"rectangle\":\"ChessboardBoard_rectangle__3IHvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board-wrapper\":\"NotaktoBoard_board-wrapper__2qh9-\",\"status\":\"NotaktoBoard_status___xkS9\",\"board\":\"NotaktoBoard_board__1PaIn\",\"cell\":\"NotaktoBoard_cell__3EHj-\",\"menu\":\"NotaktoBoard_menu__lWLtX\",\"rulesButton\":\"NotaktoBoard_rulesButton__2J201\",\"rectangle\":\"NotaktoBoard_rectangle__21WDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board-wrapper\":\"KaylesBoard_board-wrapper__Yss4A\",\"status\":\"KaylesBoard_status__1SvF8\",\"board\":\"KaylesBoard_board__3mm0F\",\"menu\":\"KaylesBoard_menu__1j8hV\",\"rulesButton\":\"KaylesBoard_rulesButton__2ol8b\",\"rectangle\":\"KaylesBoard_rectangle__1xe7N\"};"],"sourceRoot":""}